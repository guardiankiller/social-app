plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'org.guardiankiller'
version = '0.0.1-SNAPSHOT'

String msrVersion = {
    String major = project.property 'build.version.major'
    String minor = project.property 'build.version.minor'
    String build = project.property 'build.number'

    "$major.$minor.$build"
}()

version = msrVersion

java {
    sourceCompatibility = '17'
}

bootJar {
    manifest.attributes (
            'Implementation-Version': "$msrVersion"
    )
}

springBoot {
    mainClass = 'org.guardiankiller.social.app.SocialAppApplication'
    buildInfo {
        version = msrVersion
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('ngDeploy', Copy) {
    dependsOn 'frontend:ngBuild'
    from('frontend/dist')
    into('src/main/resources/static')
}

tasks.named('processResources').get().dependsOn('ngDeploy')
